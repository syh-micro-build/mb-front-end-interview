import{_ as e,c as o,a2 as t,o as i}from"./chunks/framework.Dvg3AjVP.js";const w=JSON.parse('{"title":"HTML","description":"","frontmatter":{},"headers":[],"relativePath":"src/questions/front-base/1_HTML.md","filePath":"src/questions/front-base/1_HTML.md","lastUpdated":1740728708000}'),l={name:"src/questions/front-base/1_HTML.md"};function d(r,a,h,c,s,n){return i(),o("div",null,a[0]||(a[0]=[t('<h1 id="html" tabindex="-1">HTML <a class="header-anchor" href="#html" aria-label="Permalink to &quot;HTML&quot;">​</a></h1><h2 id="什么是静态网页-什么是动态网页" tabindex="-1">什么是静态网页？什么是动态网页？ <a class="header-anchor" href="#什么是静态网页-什么是动态网页" aria-label="Permalink to &quot;什么是静态网页？什么是动态网页？&quot;">​</a></h2><h4 id="类型-基础" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-2-分" tabindex="-1">解答（2 分） <a class="header-anchor" href="#解答-2-分" aria-label="Permalink to &quot;解答（2 分）&quot;">​</a></h4><ul><li><strong>2：</strong> 静态网页：没有与服务端发生交互的网页；动态网页：与服务端有交互的网页</li></ul><h2 id="谈谈你对-html-语义化的理解" tabindex="-1">谈谈你对 HTML 语义化的理解 <a class="header-anchor" href="#谈谈你对-html-语义化的理解" aria-label="Permalink to &quot;谈谈你对 HTML 语义化的理解&quot;">​</a></h2><h4 id="类型-基础-1" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-1" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6-1" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6-1" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-3-分" tabindex="-1">解答（3 分） <a class="header-anchor" href="#解答-3-分" aria-label="Permalink to &quot;解答（3 分）&quot;">​</a></h4><ul><li><strong>1：</strong> What：通过语义化标签对网站进行结构化；</li><li><strong>1：</strong> Why：便于浏览器解析，便于特殊设备解析，便于搜索引擎收录，提高代码的可维护性和复用性；</li><li><strong>1：</strong> How：<code>header</code>-文档头、<code>nav</code>-导航区、<code>section</code>-文档块、<code>article</code>-内容、<code>aside</code>-侧边栏-广告栏、<code>footer</code>-文档脚注；</li></ul><h2 id="谈谈你对锚点的理解" tabindex="-1">谈谈你对锚点的理解 <a class="header-anchor" href="#谈谈你对锚点的理解" aria-label="Permalink to &quot;谈谈你对锚点的理解&quot;">​</a></h2><h4 id="类型-基础-2" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-2" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6-2" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6-2" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-2-分-1" tabindex="-1">解答（2 分） <a class="header-anchor" href="#解答-2-分-1" aria-label="Permalink to &quot;解答（2 分）&quot;">​</a></h4><ul><li><strong>1：</strong> What &amp; Why：文档中某一行的记号，用于链接到文档中指定的位置；避免用户频繁滚动页面，提升用户体验；</li><li><strong>1：</strong> How：<code>&lt;h2 id=&quot;know&quot;&gt;谈谈你对锚点的理解 &lt;a href=&quot;#know&quot;&gt;​&lt;/a&gt;&lt;/h2&gt;</code>、<code>&lt;div&gt;&lt;a name=&quot;know&quot;&gt;​&lt;/a&gt;&lt;a href=&quot;#know&quot;&gt;​&lt;/a&gt;&lt;/div&gt;</code>、``；</li></ul><h2 id="超链接有哪些常见的表现形式" tabindex="-1">超链接有哪些常见的表现形式？ <a class="header-anchor" href="#超链接有哪些常见的表现形式" aria-label="Permalink to &quot;超链接有哪些常见的表现形式？&quot;">​</a></h2><h4 id="类型-基础-3" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-3" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6-3" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6-3" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-2-分-2" tabindex="-1">解答（2 分） <a class="header-anchor" href="#解答-2-分-2" aria-label="Permalink to &quot;解答（2 分）&quot;">​</a></h4><ul><li><strong>2：</strong><ul><li>跳转链接：页面跳转，<code>&lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;</code></li><li>下载链接：下载资源，<code>&lt;a href=&quot;data.zip&quot;&gt;本地&lt;/a&gt;</code></li><li>锚点链接：锚点跳转，<code>&lt;a href=&quot;#know&quot;&gt;​&lt;/a&gt;</code></li><li>邮箱链接：唤起邮箱，<code>&lt;a href=&quot;mailto:xxx@xxx.com&quot;&gt;xxx&lt;/a&gt;</code></li><li>空链接：返回页面顶部，<code>&lt;a href=&quot;&quot;&gt;​&lt;/a&gt;</code></li><li>代码块：执行代码，<code>&lt;a href=&quot;javascript:void(0);&quot;&gt;​&lt;/a&gt;</code></li></ul></li></ul><h2 id="img-标签的-title-和-alt-属性作用" tabindex="-1">img 标签的 title 和 alt 属性作用 <a class="header-anchor" href="#img-标签的-title-和-alt-属性作用" aria-label="Permalink to &quot;img 标签的 title 和 alt 属性作用&quot;">​</a></h2><h4 id="类型-基础-4" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-4" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6-4" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6-4" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-1-分" tabindex="-1">解答（1 分） <a class="header-anchor" href="#解答-1-分" aria-label="Permalink to &quot;解答（1 分）&quot;">​</a></h4><ul><li><strong>1：</strong> <code>title</code>属性是当鼠标悬停在图片上时，显示的提示文本；<code>alt</code>属性是图片无法正常显示时，显示的文本，如：图片加载失败、图片被屏蔽等。</li></ul><h2 id="src-与-href-的区别" tabindex="-1">src 与 href 的区别 <a class="header-anchor" href="#src-与-href-的区别" aria-label="Permalink to &quot;src 与 href 的区别&quot;">​</a></h2><h4 id="类型-基础-5" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-5" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6-5" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6-5" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-1-分-1" tabindex="-1">解答（1 分） <a class="header-anchor" href="#解答-1-分-1" aria-label="Permalink to &quot;解答（1 分）&quot;">​</a></h4><ul><li><strong>1：</strong> <code>src</code>属性是资源路径，引入资源，属于当前页不可缺少的部分，如：<code>src=&quot;http://www.baidu.com/logo.png&quot;</code>；<code>href</code>属性是超链接，引用资源，表示该资源与当前页有关联，如：<code>href=&quot;http://www.baidu.com&quot;</code>。</li></ul><h2 id="iframe-有哪些特点-优缺点" tabindex="-1">iframe 有哪些特点（优缺点）？ <a class="header-anchor" href="#iframe-有哪些特点-优缺点" aria-label="Permalink to &quot;iframe 有哪些特点（优缺点）？&quot;">​</a></h2><h4 id="类型-基础-6" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-6" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w3、w4、w5、w6" tabindex="-1">级别：<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w3、w4、w5、w6" aria-label="Permalink to &quot;级别：`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-4-分" tabindex="-1">解答（4 分） <a class="header-anchor" href="#解答-4-分" aria-label="Permalink to &quot;解答（4 分）&quot;">​</a></h4><ul><li><strong>2：</strong> 优点： <ul><li>内容独立：iframe 中的元素、变量、样式是独立的；</li><li>并行加载：浏览器可以同时加载一个页面中多个 iframe 的资源；</li><li>灵活性强：可以引入各类网站，即使跨域；</li></ul></li><li><strong>2：</strong> 缺点： <ul><li>不利于 SEO：iframe 没有语义，iframe 中的内容无法被搜索引擎收录；</li><li>性能问题：iframe 中的内容无法被浏览器缓存，每次刷新都需要重新加载，多个 iframe 存在相同资源也会重复加载；</li><li>通讯复杂：iframe 中两个页面之间无法直接通信，需要借助中间服务，如：postMessage、window.name 等；</li></ul></li></ul><h2 id="谈谈你对-web-标准以及-w3c-的理解和认识" tabindex="-1">谈谈你对 Web 标准以及 W3C 的理解和认识 <a class="header-anchor" href="#谈谈你对-web-标准以及-w3c-的理解和认识" aria-label="Permalink to &quot;谈谈你对 Web 标准以及 W3C 的理解和认识&quot;">​</a></h2><h4 id="类型-拓展" tabindex="-1">类型：<code>拓展</code> <a class="header-anchor" href="#类型-拓展" aria-label="Permalink to &quot;类型：`拓展`&quot;">​</a></h4><h4 id="级别-w4、w5、w6" tabindex="-1">级别：<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w4、w5、w6" aria-label="Permalink to &quot;级别：`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-2-分-3" tabindex="-1">解答（2 分） <a class="header-anchor" href="#解答-2-分-3" aria-label="Permalink to &quot;解答（2 分）&quot;">​</a></h4><ul><li><strong>1：</strong> Web 标准指的是万维网（World Wide Web）上各种网页、网页元素、网页设计、网页交互等网页制作规范。W3C 是万维网联盟（World Wide Web Consortium），致力于制定和推广开放网络标准，以支持互联网和万维网发展。</li><li><strong>1：</strong> 标签要闭合，英文小写，且不要嵌套混乱，用标签语义化未提高技索的概率。使用外链式的 css 和 JS 脚本，使结构、样式、行为分离，内容能被更广泛的设备所访问，代码精简 开发组件化 ，代码易维护、 可复用，改版、升级方便。</li></ul><h2 id="什么是严格模式与混杂模式" tabindex="-1">什么是严格模式与混杂模式？ <a class="header-anchor" href="#什么是严格模式与混杂模式" aria-label="Permalink to &quot;什么是严格模式与混杂模式？&quot;">​</a></h2><h4 id="类型-拓展-1" tabindex="-1">类型：<code>拓展</code> <a class="header-anchor" href="#类型-拓展-1" aria-label="Permalink to &quot;类型：`拓展`&quot;">​</a></h4><h4 id="级别-w4、w5、w6-1" tabindex="-1">级别：<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w4、w5、w6-1" aria-label="Permalink to &quot;级别：`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-1-分-2" tabindex="-1">解答（1 分） <a class="header-anchor" href="#解答-1-分-2" aria-label="Permalink to &quot;解答（1 分）&quot;">​</a></h4><ul><li><strong>1：</strong> 严格模式：是以浏览器支持的最高标准运行, 混杂模式：页面以宽松向下兼容的方式显示，模拟老式浏览器的行为。</li></ul><h2 id="script、script-async-和-script-defer-的区别" tabindex="-1">script、script async 和 script defer 的区别？ <a class="header-anchor" href="#script、script-async-和-script-defer-的区别" aria-label="Permalink to &quot;script、script async 和 script defer 的区别？&quot;">​</a></h2><h4 id="类型-基础-7" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-7" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w3、w4、w5、w6-1" tabindex="-1">级别：<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w3、w4、w5、w6-1" aria-label="Permalink to &quot;级别：`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-2-分-4" tabindex="-1">解答（2 分） <a class="header-anchor" href="#解答-2-分-4" aria-label="Permalink to &quot;解答（2 分）&quot;">​</a></h4><p>script - HTML 解析中断，脚本被提取并立即执行。执行结束后，HTML 解析继续。</p><p>async - 脚本的提取、执行的过程与 HTML 解析过程并行，脚本执行完毕可能在 HTML 解析完毕之前。当脚本与页面上其他脚本独立时，可以使用 async，比如用作页面统计分析。</p><p>defer - 脚本仅提取过程与 HTML 解析过程并行，脚本的执行将在 HTML 解析完毕后进行。如果有多个含 defer 的脚本，脚本的执行顺序将按照在 document 中出现的位置，从上到下顺序执行。</p><h2 id="什么是-doctype-有何作用" tabindex="-1">什么是 DOCTYPE， 有何作用？ <a class="header-anchor" href="#什么是-doctype-有何作用" aria-label="Permalink to &quot;什么是 DOCTYPE， 有何作用？&quot;">​</a></h2><h4 id="类型-拓展-2" tabindex="-1">类型：<code>拓展</code> <a class="header-anchor" href="#类型-拓展-2" aria-label="Permalink to &quot;类型：`拓展`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6-6" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6-6" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-1-分-3" tabindex="-1">解答（1 分） <a class="header-anchor" href="#解答-1-分-3" aria-label="Permalink to &quot;解答（1 分）&quot;">​</a></h4><ul><li><strong>1：</strong> Doctype是HTML5的文档声明。浏览器发展过程中，HTML出现很多版本，不同版本之间格式有差异。如果没有事先告诉浏览器，那么浏览器就不知道文档解析标准是什么？此时，大部分浏览器将开启最大兼容模式来解析网页，我们一般称为怪异模式，这不仅会降低解析效率，而且会在解析过程中产生一些难以预知的bug，所以文档声明是必须的。</li></ul><h2 id="html5-中的web-worker是什么" tabindex="-1">HTML5 中的Web Worker是什么？ <a class="header-anchor" href="#html5-中的web-worker是什么" aria-label="Permalink to &quot;HTML5 中的Web Worker是什么？&quot;">​</a></h2><h4 id="类型-拓展-3" tabindex="-1">类型：<code>拓展</code> <a class="header-anchor" href="#类型-拓展-3" aria-label="Permalink to &quot;类型：`拓展`&quot;">​</a></h4><h4 id="级别-w3、w4、w5、w6-2" tabindex="-1">级别：<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w3、w4、w5、w6-2" aria-label="Permalink to &quot;级别：`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-4-分-1" tabindex="-1">解答（4 分） <a class="header-anchor" href="#解答-4-分-1" aria-label="Permalink to &quot;解答（4 分）&quot;">​</a></h4><ul><li><p><strong>1：</strong> 基本概念：</p><ul><li>运行在后台的JavaScript</li><li>独立于主线程</li><li>不会阻塞页面渲染</li></ul></li><li><p><strong>1：</strong> 主要特点：</p><ul><li>多线程执行</li><li>消息通信机制</li><li>独立的运行环境</li></ul></li><li><p><strong>1：</strong> 使用限制：</p><ul><li>无法访问DOM</li><li>无法访问window对象</li><li>无法访问document对象</li><li>有同源限制</li></ul></li><li><p><strong>1：</strong> 适用场景：</p><ul><li>复杂数据处理</li><li>大量计算</li><li>图像处理</li><li>数据加密</li></ul></li></ul><h2 id="html5-中的websocket是什么" tabindex="-1">HTML5 中的WebSocket是什么？ <a class="header-anchor" href="#html5-中的websocket是什么" aria-label="Permalink to &quot;HTML5 中的WebSocket是什么？&quot;">​</a></h2><h4 id="类型-拓展-4" tabindex="-1">类型：<code>拓展</code> <a class="header-anchor" href="#类型-拓展-4" aria-label="Permalink to &quot;类型：`拓展`&quot;">​</a></h4><h4 id="级别-w3、w4、w5、w6-3" tabindex="-1">级别：<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w3、w4、w5、w6-3" aria-label="Permalink to &quot;级别：`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-4-分-2" tabindex="-1">解答（4 分） <a class="header-anchor" href="#解答-4-分-2" aria-label="Permalink to &quot;解答（4 分）&quot;">​</a></h4><ul><li><p><strong>1：</strong> 基本概念：</p><ul><li>基于TCP的全双工通信协议</li><li>服务器可以主动推送数据</li><li>建立在HTTP协议之上</li><li>使用ws://或wss://作为协议前缀</li></ul></li><li><p><strong>1：</strong> 主要特点：</p><ul><li>持久连接</li><li>全双工通信</li><li>数据格式轻量</li><li>更好的实时性</li></ul></li><li><p><strong>1：</strong> 与HTTP的区别：</p><ul><li>不需要频繁建立连接</li><li>服务器可以主动推送</li><li>更低的通信开销</li><li>无同源限制</li></ul></li><li><p><strong>1：</strong> 应用场景：</p><ul><li>实时聊天</li><li>游戏通信</li><li>实时数据展示</li><li>协同编辑</li></ul></li></ul><h2 id="行内元素有哪些-块级元素有哪些-空-void-元素有那些" tabindex="-1">行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？ <a class="header-anchor" href="#行内元素有哪些-块级元素有哪些-空-void-元素有那些" aria-label="Permalink to &quot;行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？&quot;">​</a></h2><h4 id="类型-基础-8" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-8" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6-7" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6-7" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-2-分-5" tabindex="-1">解答（2 分） <a class="header-anchor" href="#解答-2-分-5" aria-label="Permalink to &quot;解答（2 分）&quot;">​</a></h4><p>行内元素有：a b span img input select strong；</p><p>块级元素有：div ul ol li dl dt dd h1 h2 h3 h4 h5 h6 p；</p><p>空元素，即没有内容的HTML元素。空元素是在开始标签中关闭的，也就是空元素没有闭合标签：</p><p>常见的有：br hr img input link meta</p><h2 id="行内元素和块级元素的区别是什么" tabindex="-1">行内元素和块级元素的区别是什么 <a class="header-anchor" href="#行内元素和块级元素的区别是什么" aria-label="Permalink to &quot;行内元素和块级元素的区别是什么&quot;">​</a></h2><h4 id="类型-基础-9" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-9" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6-8" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6-8" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-3-分-1" tabindex="-1">解答（3 分） <a class="header-anchor" href="#解答-3-分-1" aria-label="Permalink to &quot;解答（3 分）&quot;">​</a></h4><ul><li><strong>1：</strong> 布局方面：块级元素会独占一行，默认情况下宽度会填满父容器，如<code>&lt;div&gt;、&lt;p&gt;、&lt;h1&gt;</code>等；行内元素不会独占一行，在一行内可以多个行 内元素并排显示，如<code>&lt;span&gt;、&lt;a&gt;、&lt;img&gt;</code>等。</li><li><strong>1：</strong> 尺寸方面：块级元素可以设置宽度、高度、上下内外边距等属性，能通过 CSS 自由控制其大小和位置；行内元素默认宽度和高度由内容决定，一般 不能直接设置宽度和高度，垂直方向的内外边距设置可能会有部分效果，但不如块级元素明显。</li><li><strong>1：</strong> 嵌套方面：块级元素可以包含块级元素和行内元素，但一些特定的块级元素有其嵌套规则限制；行内元素一般只能包含文本和其他行内元素，不能包含 块级元素，不过<code>&lt;a&gt;</code>标签比较特殊，理论上可以包含大部分元素。</li></ul><h2 id="请解释-meta-标签的作用-并列举几个常见的-meta-标签及其功能" tabindex="-1">请解释 meta 标签的作用，并列举几个常见的 meta 标签及其功能 <a class="header-anchor" href="#请解释-meta-标签的作用-并列举几个常见的-meta-标签及其功能" aria-label="Permalink to &quot;请解释 meta 标签的作用，并列举几个常见的 meta 标签及其功能&quot;">​</a></h2><h4 id="类型-基础-10" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-10" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w3、w4、w5、w6-4" tabindex="-1">级别：<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w3、w4、w5、w6-4" aria-label="Permalink to &quot;级别：`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-5-分" tabindex="-1">解答（5 分） <a class="header-anchor" href="#解答-5-分" aria-label="Permalink to &quot;解答（5 分）&quot;">​</a></h4><ul><li><strong>1：</strong> meta 标签用于提供有关 HTML 文档的元数据，这些元数据不会显示在页面上，但对浏览器和搜索引擎等非常重要。</li><li><strong>1：</strong> <code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code>：用于指定文档的字符编码，确保页面可以正确显示不同语言的字符，这里设置为 UTF-8 编码，是目前最常用的字符编码方式，支持多种语言。</li><li><strong>1：</strong> <code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</code>：主要用于移动端开发，设置视口的属性，<code>width=device-width</code> 表示视口 宽度等于设备的屏幕宽度，<code>initial-scale=1.0</code> 表示初始缩放比例为 1.0。这有助于在不同设备上实现响应式布局，确保页面在移动设备上的显示效果良好。</li><li><strong>1：</strong> <code>&lt;meta name=&quot;description&quot; content=&quot;这是一个关于 HTML 面试题的页面描述&quot;&gt;</code>：为页面提供一个简短的描述，搜索引擎会使用这个描述来显示在搜索结果中，影响页面的搜 索排名和用户点击行为，因此应该简洁且准确地描述页面内容。</li><li><strong>1：</strong> <code>&lt;meta name=&quot;keywords&quot; content=&quot;HTML, 面试题, 网页开发&quot;&gt;</code>：用于指定页面的关键词，帮助搜索引擎理解页面的主要内容，但在现代 SEO 中，其重要性相对降低，因为搜索引擎更多地依赖页面的实际内容和结构，但仍可作为辅助信息。</li></ul><h2 id="请阐述-html5-中-template-元素的特点和优势" tabindex="-1">请阐述 HTML5 中 <code>&lt;template&gt;</code> 元素的特点和优势 <a class="header-anchor" href="#请阐述-html5-中-template-元素的特点和优势" aria-label="Permalink to &quot;请阐述 HTML5 中 `&lt;template&gt;` 元素的特点和优势&quot;">​</a></h2><h4 id="类型-基础-11" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-11" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w3、w4、w5、w6-5" tabindex="-1">级别：<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w3、w4、w5、w6-5" aria-label="Permalink to &quot;级别：`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-2-分-6" tabindex="-1">解答（2 分） <a class="header-anchor" href="#解答-2-分-6" aria-label="Permalink to &quot;解答（2 分）&quot;">​</a></h4><ul><li><strong>1：</strong> 特点：<code>&lt;template&gt;</code> 元素是一个存储内容的容器，其中的内容在页面加载时不会被渲染，只有在通过 JavaScript 等方式调用时才会被使用。它包含的内容可以是完整的 HTML 片段，包括标签、文本、样式等。</li><li><strong>1：</strong> 优势：提高了代码的可维护性和页面加载性能。</li></ul><h2 id="canvas-和-svg-有何区别" tabindex="-1">Canvas 和 SVG 有何区别 <a class="header-anchor" href="#canvas-和-svg-有何区别" aria-label="Permalink to &quot;Canvas 和 SVG 有何区别&quot;">​</a></h2><h4 id="类型-基础-12" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-12" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w3、w4、w5、w6-6" tabindex="-1">级别：<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w3、w4、w5、w6-6" aria-label="Permalink to &quot;级别：`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-1-分-4" tabindex="-1">解答（1 分） <a class="header-anchor" href="#解答-1-分-4" aria-label="Permalink to &quot;解答（1 分）&quot;">​</a></h4><p>Canvas 是基于像素的绘图，适用于动画、游戏、图表等，特别是需要高性能绘制的场景；SVG 是基于矢量的绘图，适用于图标、复杂图形、可缩放的图形等。</p><h2 id="png、jpg、gif、webp这些图片格式的区别" tabindex="-1">png、jpg、gif、webp这些图片格式的区别 <a class="header-anchor" href="#png、jpg、gif、webp这些图片格式的区别" aria-label="Permalink to &quot;png、jpg、gif、webp这些图片格式的区别&quot;">​</a></h2><h4 id="类型-基础-13" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-13" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w3、w4、w5、w6-7" tabindex="-1">级别：<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w3、w4、w5、w6-7" aria-label="Permalink to &quot;级别：`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-1-分-5" tabindex="-1">解答（1 分） <a class="header-anchor" href="#解答-1-分-5" aria-label="Permalink to &quot;解答（1 分）&quot;">​</a></h4><p>png：无损压缩，尺寸体积要比jpg/jpeg的大。适合做小图标和存在透明背景的图</p><p>jpg：采用压缩算法，有一点失真，比png体积要小。适合做中大图片</p><p>gif：一般是做动图</p><p>webp:同时支持有损或者无损压缩，相同质量的图片，webp具有更小的体积。兼容性不是特别好</p><h2 id="什么是-优雅降级、渐进增强" tabindex="-1">什么是 优雅降级、渐进增强？ <a class="header-anchor" href="#什么是-优雅降级、渐进增强" aria-label="Permalink to &quot;什么是 优雅降级、渐进增强？&quot;">​</a></h2><h4 id="类型-基础-14" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-14" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w4、w5、w6-2" tabindex="-1">级别：<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w4、w5、w6-2" aria-label="Permalink to &quot;级别：`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-2-分-7" tabindex="-1">解答（2 分） <a class="header-anchor" href="#解答-2-分-7" aria-label="Permalink to &quot;解答（2 分）&quot;">​</a></h4><p>优雅降级（Graceful Degradation）和渐进增强（Progressive Enhancement）是Web开发中用于提高网站或应用在不同环境和设备上的适应性的两种策略。</p><p>优雅降级是一种设计策略，先把功能做全，再考虑环境兼容进行功能削减，保证核心功能可以适应不同环境。</p><p>渐进增强是先做核心功能，保障项目可行性，再不断扩充优化，提升用户体验。</p><h2 id="img的srcset属性的作用" tabindex="-1">img的srcset属性的作⽤？ <a class="header-anchor" href="#img的srcset属性的作用" aria-label="Permalink to &quot;img的srcset属性的作⽤？&quot;">​</a></h2><h4 id="类型-基础-15" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-15" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w4、w5、w6-3" tabindex="-1">级别：<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w4、w5、w6-3" aria-label="Permalink to &quot;级别：`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-2-分-8" tabindex="-1">解答（2 分） <a class="header-anchor" href="#解答-2-分-8" aria-label="Permalink to &quot;解答（2 分）&quot;">​</a></h4><p>响应式页面中经常用到根据屏幕密度设置不同的图片。这时就用到了 img 标签的srcset属性。srcset属性用于设置不同屏幕密度下，img 会自动加载不同的图片。用法如下：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;default.png&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> srcset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;low-res.jpg 1x, high-res.jpg 2x&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><h2 id="label-的作用是什么-如何使用" tabindex="-1">label 的作用是什么？如何使用 <a class="header-anchor" href="#label-的作用是什么-如何使用" aria-label="Permalink to &quot;label 的作用是什么？如何使用&quot;">​</a></h2><h4 id="类型-基础-16" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-16" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`&quot;">​</a></h4><h4 id="解答-1-分-6" tabindex="-1">解答（1 分） <a class="header-anchor" href="#解答-1-分-6" aria-label="Permalink to &quot;解答（1 分）&quot;">​</a></h4><p>label标签来定义表单控件的关系：当用户选择label标签时，浏览器会自动将焦点转到和label标签相关的表单控件上。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mobile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Number:&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mobile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div><h2 id="head-标签有什么作用-其中什么标签必不可少" tabindex="-1">head 标签有什么作用，其中什么标签必不可少？ <a class="header-anchor" href="#head-标签有什么作用-其中什么标签必不可少" aria-label="Permalink to &quot;head 标签有什么作用，其中什么标签必不可少？&quot;">​</a></h2><h4 id="类型-基础-17" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-17" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6-9" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6-9" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-1-分-7" tabindex="-1">解答（1 分） <a class="header-anchor" href="#解答-1-分-7" aria-label="Permalink to &quot;解答（1 分）&quot;">​</a></h4><p>标签用于定义文档的头部，它是所有头部元素的容器。 中的元素可以引用脚本、指示浏览器在哪里找到样式表、提供元信息等。</p><p>文档的头部描述了文档的各种属性和信息，包括文档的标题、在 Web 中的位置以及和其他文档的关系等。绝大多数文档头部包含的数据都不会真正作为内容显示给读者。</p><p>下面这些标签可用在 head 部分：title、meta、link 等。</p><h2 id="说一下-html5-drag-api" tabindex="-1">说一下 HTML5 drag API <a class="header-anchor" href="#说一下-html5-drag-api" aria-label="Permalink to &quot;说一下 HTML5 drag API&quot;">​</a></h2><h4 id="类型-基础-18" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-18" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6-10" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6-10" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-2-分-9" tabindex="-1">解答（2 分） <a class="header-anchor" href="#解答-2-分-9" aria-label="Permalink to &quot;解答（2 分）&quot;">​</a></h4><p>dragstart：事件主体是被拖放元素，在开始拖放被拖放元素时触发。</p><p>darg：事件主体是被拖放元素，在正在拖放被拖放元素时触发。</p><p>dragenter：事件主体是目标元素，在被拖放元素进入某元素时触发。</p><p>dragover：事件主体是目标元素，在被拖放在某元素内移动时触发。</p><p>dragleave：事件主体是目标元素，在被拖放元素移出目标元素是触发。</p><p>drop：事件主体是目标元素，在目标元素完全接受被拖放元素时触发。</p><p>dragend：事件主体是被拖放元素，在整个拖放操作结束时触发。</p><h2 id="quirks-怪癖-模式是什么-它和standards-标准-有什么区别" tabindex="-1">Quirks（怪癖）模式是什么？它和Standards（标准）有什么区别？ <a class="header-anchor" href="#quirks-怪癖-模式是什么-它和standards-标准-有什么区别" aria-label="Permalink to &quot;Quirks（怪癖）模式是什么？它和Standards（标准）有什么区别？&quot;">​</a></h2><h4 id="类型-拓展-5" tabindex="-1">类型：<code>拓展</code> <a class="header-anchor" href="#类型-拓展-5" aria-label="Permalink to &quot;类型：`拓展`&quot;">​</a></h4><h4 id="级别-w3、w4、w5、w6-8" tabindex="-1">级别：<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w3、w4、w5、w6-8" aria-label="Permalink to &quot;级别：`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-1-分-8" tabindex="-1">解答（1 分） <a class="header-anchor" href="#解答-1-分-8" aria-label="Permalink to &quot;解答（1 分）&quot;">​</a></h4><p>页面如果写了DTD，就意味着这个页面采用对CSS支持更好的布局，而如果没有，则采用兼容之前的布局方式，这就是Quirks模式，有时候也叫怪癖模式、诡异模式、怪异模式。</p><p>区别：总体会有布局、样式解析、脚本执行三个方面区别，这里列举一些比较常见的区别：</p><ul><li><p>盒模型：在W3C标准中，如果设置一个元素的宽度和高度，指的是元素内容的宽度和高度，然而在Quirks模式下，IE的宽度和高度还包含了padding和border</p></li><li><p>设置行内元素的高宽：在Standards模式下，给行内元素设置width和height都不会生效，而在Quriks模式下会生效</p></li><li><p>用margin：0 auto设置水平居中:在Standards模式下，设置margin：0 auto；可以使元素水平居中，但是在Quriks模式下失效</p></li><li><p>设置百分比高度:在Standards模式下，元素的高度是由包含的内容决定的，如果父元素没有设置百分比的高度，子元素设置百分比的高度是无效的</p></li></ul><h2 id="meta-viewport-是做什么用的-怎么写" tabindex="-1">meta viewport 是做什么用的，怎么写？ <a class="header-anchor" href="#meta-viewport-是做什么用的-怎么写" aria-label="Permalink to &quot;meta viewport 是做什么用的，怎么写？&quot;">​</a></h2><h4 id="类型-基础-19" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-19" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6-11" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6-11" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-2-分-10" tabindex="-1">解答（2 分） <a class="header-anchor" href="#解答-2-分-10" aria-label="Permalink to &quot;解答（2 分）&quot;">​</a></h4><p>Viewport，适配移动端，可以控制视口的大小和比例：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;viewport&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>width viewport ：宽度(数值/device-width)</p><p>height viewport ：高度(数值/device-height)</p><p>initial-scale ：初始缩放比例</p><p>maximum-scale ：最大缩放比例</p><p>minimum-scale ：最小缩放比例</p><h2 id="html、xml、xhtml-的区别" tabindex="-1">HTML、XML、XHTML 的区别 <a class="header-anchor" href="#html、xml、xhtml-的区别" aria-label="Permalink to &quot;HTML、XML、XHTML 的区别&quot;">​</a></h2><h4 id="类型-拓展-6" tabindex="-1">类型：<code>拓展</code> <a class="header-anchor" href="#类型-拓展-6" aria-label="Permalink to &quot;类型：`拓展`&quot;">​</a></h4><h4 id="级别-w4、w5、w6-4" tabindex="-1">级别：<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w4、w5、w6-4" aria-label="Permalink to &quot;级别：`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-1-分-9" tabindex="-1">解答（1 分） <a class="header-anchor" href="#解答-1-分-9" aria-label="Permalink to &quot;解答（1 分）&quot;">​</a></h4><ul><li><p>HTML：超文本标记语言，是语法较为松散的、不严格的Web语言；</p></li><li><p>XML：可扩展标记语言，是语法较为严格、严格的标记语言；</p></li><li><p>XHTML：可扩展超文本标记语言，是HTML进行XML严格化的结果；</p></li></ul><h2 id="table的作用以及其优缺点" tabindex="-1">table的作用以及其优缺点 <a class="header-anchor" href="#table的作用以及其优缺点" aria-label="Permalink to &quot;table的作用以及其优缺点&quot;">​</a></h2><h4 id="类型-基础-20" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-20" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w4、w5、w6-5" tabindex="-1">级别：<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w4、w5、w6-5" aria-label="Permalink to &quot;级别：`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-2-分-11" tabindex="-1">解答（2 分） <a class="header-anchor" href="#解答-2-分-11" aria-label="Permalink to &quot;解答（2 分）&quot;">​</a></h4><p>作用：布局</p><p>优点：table做表格，有丰富的表格样式api；</p><p>缺点：</p><p>Table要比其它html标记占更多的字节，会导致延迟下载时间，占用服务器更多的流量资源；</p><p>Table会阻挡浏览器渲染引擎的渲染顺序，这会导致延迟页面的生成速度，让用户等待更久的时间；</p><p>灵活性差，比如要通多td才能设置tr的border属性；</p><p>代码臃肿，当在table中套用table的时候，阅读代码会显得异常混乱；</p><p>混乱的colspan与rowspan，用来布局时，频繁使用他们会造成整个文档顺序混乱；</p><p>深层的嵌套，导致搜索引擎读取困难，同时还很大程度上增加了代码冗余；</p><p>不够语义。</p><h2 id="html元素如何体现其嵌套关系" tabindex="-1">HTML元素如何体现其嵌套关系 <a class="header-anchor" href="#html元素如何体现其嵌套关系" aria-label="Permalink to &quot;HTML元素如何体现其嵌套关系&quot;">​</a></h2><h4 id="类型-基础-21" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-21" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6-12" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6-12" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-2-分-12" tabindex="-1">解答（2 分） <a class="header-anchor" href="#解答-2-分-12" aria-label="Permalink to &quot;解答（2 分）&quot;">​</a></h4><p>块级元素可以包含行内元素；</p><p>块级元素不一定能包含块级元素；</p><p>行内元素一般不能包含块级元素（a元素例外）</p><h2 id="如何对网站的文件和资源进行优化" tabindex="-1">如何对网站的文件和资源进行优化 <a class="header-anchor" href="#如何对网站的文件和资源进行优化" aria-label="Permalink to &quot;如何对网站的文件和资源进行优化&quot;">​</a></h2><h4 id="类型-基础-22" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-22" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w3、w4、w5、w6-9" tabindex="-1">级别：<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w3、w4、w5、w6-9" aria-label="Permalink to &quot;级别：`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-2-分-13" tabindex="-1">解答（2 分） <a class="header-anchor" href="#解答-2-分-13" aria-label="Permalink to &quot;解答（2 分）&quot;">​</a></h4><p>文件合并（目的是减少http请求）；</p><p>文件压缩 （目的是直接减少文件下载的体积）；</p><p>使用缓存；</p><p>使用cdn托管资源；</p><p>gizp压缩需要的js和css文件；</p><p>反向链接，网站外链接优化；</p><p>meta标签优化（title, description, keywords）,heading标签的优化,alt优化；</p><p>代码分割（Code Splitting）、Tree Shaking删除未使用代码；</p><h2 id="form-标签的method属性有get和post两种取值-它们之间有什么区别" tabindex="-1"><code>&lt;form&gt;</code>标签的method属性有get和post两种取值，它们之间有什么区别？ <a class="header-anchor" href="#form-标签的method属性有get和post两种取值-它们之间有什么区别" aria-label="Permalink to &quot;`&lt;form&gt;`标签的method属性有get和post两种取值，它们之间有什么区别？&quot;">​</a></h2><h4 id="类型-基础-23" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-23" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w3、w4、w5、w6-10" tabindex="-1">级别：<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w3、w4、w5、w6-10" aria-label="Permalink to &quot;级别：`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-4-分-3" tabindex="-1">解答（4 分） <a class="header-anchor" href="#解答-4-分-3" aria-label="Permalink to &quot;解答（4 分）&quot;">​</a></h4><ul><li><strong>1：</strong> 数据传输方式：get方式将表单数据附加在 URL 后面，以?分隔 URL 和参数，参数之间用&amp;连接；post方式将表单数据放在 HTTP 请求体中。</li><li><strong>1：</strong> 数据可见性：由于get方式数据在 URL 中，所以数据是可见的，不安全，不适合传输敏感信息；post方式数据在请求体中，相对更安全。</li><li><strong>1：</strong> 数据长度限制：get方式受限于 URL 长度，不同浏览器对 URL 长度限制不同，一般较短；post方式理论上对数据长度没有限制。</li><li><strong>1：</strong> 缓存：get请求会被浏览器缓存，因为其参数在 URL 中，可被收藏；post请求不会被缓存。</li></ul><h2 id="在-html-中-如何创建一个无序列表和有序列表" tabindex="-1">在 HTML 中，如何创建一个无序列表和有序列表？ <a class="header-anchor" href="#在-html-中-如何创建一个无序列表和有序列表" aria-label="Permalink to &quot;在 HTML 中，如何创建一个无序列表和有序列表？&quot;">​</a></h2><h4 id="类型-基础-24" tabindex="-1">类型：<code>基础</code> <a class="header-anchor" href="#类型-基础-24" aria-label="Permalink to &quot;类型：`基础`&quot;">​</a></h4><h4 id="级别-w1、w2、w3、w4、w5、w6-13" tabindex="-1">级别：<code>W1</code>、<code>W2</code>、<code>W3</code>、<code>W4</code>、<code>W5</code>、<code>W6</code> <a class="header-anchor" href="#级别-w1、w2、w3、w4、w5、w6-13" aria-label="Permalink to &quot;级别：`W1`、`W2`、`W3`、`W4`、`W5`、`W6`&quot;">​</a></h4><h4 id="解答-1-分-10" tabindex="-1">解答（1 分） <a class="header-anchor" href="#解答-1-分-10" aria-label="Permalink to &quot;解答（1 分）&quot;">​</a></h4><ul><li>创建无序列表使用<code>&lt;ul&gt;</code>标签，列表项使用<code>&lt;li&gt;</code>标签。</li><li>创建有序列表使用<code>&lt;ol&gt;</code>标签，同样列表项使用<code>&lt;li&gt;</code>标签。</li></ul>',207)]))}const p=e(l,[["render",d]]);export{w as __pageData,p as default};
